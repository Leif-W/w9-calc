#!/usr/bin/env make
#
# Makefile.local - modify, replace or append calc Makefile variables
#
# Copyright (C) 2023  Landon Curt Noll
#
# Suggestion: Read the HOWTO.INSTALL file.
#
# Calc is open software; you can redistribute it and/or modify it under
# the terms of version 2.1 of the GNU Lesser General Public License
# as published by the Free Software Foundation.
#
# Calc is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General
# Public License for more details.
#
# A copy of version 2.1 of the GNU Lesser General Public License is
# distributed with calc under the filename COPYING-LGPL.  You should have
# received a copy with calc; if not, write to Free Software Foundation, Inc.
# 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
#
# This calculator first developed by David I. Bell with help/mods from others.
#
# chongo <was here> /\oo/\	http://www.isthe.com/chongo/
# Share and enjoy!  :-)		http://www.isthe.com/chongo/tech/comp/calc/

####
# This file is included all calc Makefiles after the last Makefile variable
# is set and before the first make rule.  This makes this file suitable to
# modify, replace or append Makefile variables.
#
# To replace a Makefile variable, use := symbols.  For example:
#
#	CCWERR:= -Werror
#	DEBUG:= -O0 -g
#
# You can append to an existing Makefile variable using '+=' symbols.
# For example:
#
#	CCOPT+= -Ofast
#	COMMON_CFLAGS+= -std=gnu2x
####

###################################################################
# NOTE: For this and other commended out examples in this file,	  #
# you need to remove the leading '#<whitespaces>' to take effect. #
#								  #
# Comments start with a #-character.				  #
###################################################################

####
#
# Force calc to install under /usr/local
#
# BINDIR:= /usr/local/bin
# LIBDIR:= /usr/local/lib
# CALC_SHAREDIR:= /usr/local/share/calc
# CALC_INCDIR:= /usr/local/include/calc
#
####

####
# RHEL Diagnosing memory, thread, and crash issues:
#
# For more info see: https://github.com/google/sanitizers/wiki/AddressSanitizer
#
# This comment block was tested under:
#
#	RHEL9 gcc version 11.3.1 20221121 (Red Hat 11.3.1-4) (GCC)
#
# with:
#
#	libasan-11.3.1-4.3.el9.x86_64 libubsan-11.3.1-4.3.el9.x86_64
#
# NOTE: With the above version, these are NOT supported:
#
#    UNSUPPORTED_FSANITIZE:= -fsanitize=nullability-arg -fsanitize=nullability-assign
#
# Uncomment these lines:
#
# FSANITIZE:= -fsanitize=address
# FSANITIZE:= -fsanitize=bool
# FSANITIZE:= -fsanitize=bounds
# FSANITIZE+= -fsanitize=enum
# FSANITIZE+= -fsanitize=float-cast-overflow
# FSANITIZE+= -fsanitize=float-divide-by-zero
# FSANITIZE+= -fsanitize=integer-divide-by-zero
# FSANITIZE+= -fsanitize=nonnull-attribute
# FSANITIZE+= -fsanitize=null
# FSANITIZE+= -fsanitize=returns-nonnull-attribute
# FSANITIZE+= -fsanitize=shift
# FSANITIZE+= -fsanitize=signed-integer-overflow
# FSANITIZE:= -fsanitize=undefined
# FSANITIZE+= -fsanitize=unreachable
# FSANITIZE+= -fsanitize=vla-bound
# FSANITIZE+= -fsanitize=vptr
# CFLAGS+= -Wno-invalid-command-line-argument ${FSANITIZE} -fno-omit-frame-pointer
# LDFLAGS+= -Wno-invalid-command-line-argument ${FSANITIZE} -fno-omit-frame-pointer
# CALC_ENV+= ASAN_OPTIONS=detect_stack_use_after_return=1
# DEBUG:= -O0 -g
####

####
# macOS Diagnosing memory, thread, and crash issues:
#
# For more info see: https://github.com/google/sanitizers/wiki/AddressSanitizer
#
# This comment block was tested under:
#
#	macOS 14.0 with clang version 15.0.7 (Red Hat 15.0.7-2.el9)
#
# For more info for clang to Diagnosing memory, thread, and crash issues early, see:
#
#    https://developer.apple.com/documentation/xcode/diagnosing-memory-thread-and-crash-issues-early
#
# Uncomment these lines:
#
# These values are presented in the order listed for the above mentioned URL:
#
# FSANITIZE:= -fsanitize=alignment
# FSANITIZE:= -fsanitize=bool
# FSANITIZE:= -fsanitize=bounds
# FSANITIZE+= -fsanitize=enum
# FSANITIZE+= -fsanitize=vptr
# FSANITIZE+= -fsanitize=integer-divide-by-zero
# FSANITIZE+= -fsanitize=float-divide-by-zero
# FSANITIZE+= -fsanitize=float-cast-overflow
# FSANITIZE+= -fsanitize=nonnull-attribute
# FSANITIZE+= -fsanitize=nullability-arg
# FSANITIZE+= -fsanitize=nullability-assign
# FSANITIZE+= -fsanitize=returns-nonnull-attribute
# FSANITIZE+= -fsanitize=nullability-return
# FSANITIZE+= -fsanitize=null
# FSANITIZE+= -fsanitize=object-size
# FSANITIZE+= -fsanitize=shift
# FSANITIZE+= -fsanitize=signed-integer-overflow
# FSANITIZE:= -fsanitize=undefined
# FSANITIZE+= -fsanitize=unreachable
# FSANITIZE+= -fsanitize=vla-bound
#
# We also observe these options, while NOT order listed the above mentioned URL, work:
#
# FSANITIZE:= -fsanitize=address
#
# We combine the above FSANITIZE with these compile and link options:
#
# CFLAGS+= -Wno-invalid-command-line-argument ${FSANITIZE} -fno-omit-frame-pointer
# LDFLAGS+= -Wno-invalid-command-line-argument ${FSANITIZE} -fno-omit-frame-pointer
# CALC_ENV+= ASAN_OPTIONS=detect_stack_use_after_return=1
# DEBUG:= -O0 -g3
####
